trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  rdsConnectionString: '$(RdsConnectionString)' # Secret variable

steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/app'
      publishWebProjects: true
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/app'
      artifactName: 'app'


  - task: BeanstalkDeployApplication@1
    displayName: 'Deploy to Elastic Beanstalk'
    inputs:
      awsCredentials: 'AWS-summanth'
      regionName: 'us-east-1'
      applicationName: 'ShoppingApp'
      environmentName: 'ShoppingApp-env'
      applicationType: 'aspnetCoreLinux'
      dotnetPublishPath: '$(Build.ArtifactStagingDirectory)/app/app.zip'
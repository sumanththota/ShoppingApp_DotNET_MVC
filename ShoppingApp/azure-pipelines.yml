trigger:
  branches:
    include:
      - main

pool: 'Default'

variables:
  solution: '**/*.sln'
  debug: 'Verbose'
  buildPlatform: 'Any CPU'
  artifact_bucket: 'elasticbeanstalk-us-east-1-780492718645'
  buildConfiguration: 'Release'
  s3_path: 'dotnet-mvc-app'

steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore NuGet packages'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: 'Publish'
    inputs:
      command: 'publish'
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/app'
      publishWebProjects: true
      zipAfterPublish: true

  - script: |
      echo "Listing contents of $(Build.ArtifactStagingDirectory)/app"
      ls -la $(Build.ArtifactStagingDirectory)/app
    displayName: 'List published files'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/app'
      artifactName: 'app'
  - task: S3Upload@1
    inputs:
      awsCredentials: 'AWS-sumanth'
      regionName: 'us-east-1'
      bucketName: '$(artifact_bucket)'
      targetFolder: $(s3_path)
      sourceFolder: '$(Build.ArtifactStagingDirectory)'
      globExpressions: '*.zip'


  - task: BeanstalkDeployApplication@1
    displayName: 'Deploy to Elastic Beanstalk'
    inputs:
      awsCredentials: 'AWS-sumanth'
      regionName: 'us-east-1'
      applicationName: 'Shopnext1'
      environmentName: 'Shopnext1-env'
      applicationType: 'aspnetCoreLinux'
      dotnetPublishPath: '$(Build.ArtifactStagingDirectory)/app/ShoppingApp.zip'
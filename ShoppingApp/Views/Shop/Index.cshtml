@model List<ShoppingApp.Models.Product>
@{
    ViewData["Title"] = "Shop";
    
    //Fetched the categories from the Http Request Context
    var selectedCategory = Context.Request.Query["category"].ToString();
    
    // ViewBag is used to pass data from the controller to the view
    var categories = ViewBag.Categories as List<ShoppingApp.Models.Category>;
    
    // nullable enum to store the selected category
    ShoppingApp.Models.Category? selectedCategoryEnum = null;
    
    // Parse the selected category string to enum
    if (!string.IsNullOrEmpty(selectedCategory))
    {
        selectedCategoryEnum = Enum.TryParse<ShoppingApp.Models.Category>(selectedCategory, out var parsedCategory) 
            ? parsedCategory 
            : (ShoppingApp.Models.Category?)null;
    }
}
<style>
    /* Custom style for active category list items to improve contrast and aesthetics */
    .list-group-item.active {
        background-color: #ffdd57;  /* A warm, contrasting gold */
        border-color: #ffc107;
        color: #333;
    }
    /* Smooth transition for background and text colors */
    .list-group-item {
        transition: background-color 0.3s, color 0.3s;
    }
</style>
<div class="d-flex justify-content-end mt-3 me-4">
    
    <a class="nav-link text-dark fw-bold d-flex align-items-center" asp-area="" asp-controller="Cart" asp-action="Index">
        <img src="~/shopping-cart.svg" alt="Cart" width="25" height="25" class="me-2"/>
        Cart
    </a>
    
</div>

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3">
            <h5>Categories</h5>
            <ul class="list-group">
                <li class="list-group-item @(selectedCategoryEnum == null ? "active" : "")">
                    <a href="/Shop" class="text-decoration-none">All</a>
                </li>
                @foreach (var category in categories)
                {
                    <li class="list-group-item @(category == selectedCategoryEnum ? "active" : "")">
                        <a href="/Shop?category=@category" class="text-decoration-none">@category</a>
                    </li>
                }
            </ul>
            <div class="mt-5">
                <a class="nav-link text-dark fw-bold d-flex align-items-center ms-3" asp-area="" asp-controller="Products" asp-action="Index">
                    <img src="~/archive.svg" alt="Inventory" width="25" height="25" class="me-2" />
                    Inventory
                </a>
            </div>
            
        </div>

        <!-- Product Cards -->
        <div class="col-md-9">
            <h2 class="text-center">Shop Products</h2>
            <div class="row row-cols-1 row-cols-md-3 g-4 mt-3">
                @foreach (var product in Model.Where(p => selectedCategoryEnum == null || p.Category == selectedCategoryEnum))
                {
                    <div class="col">
                        <div class="card h-100 shadow-sm">
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text text-muted">@product.Category</p>
                                <p class="card-text fw-bold">@product.Price.ToString("C")</p>
                                <p class="card-text">In stock: @product.Quantity</p>
                                <form method="post" asp-action="Add" asp-controller="Cart">
                                    <input type="hidden" name="productId" value="@product.Id" />
                                    <input type="hidden" name="quantity" value="1" />
                                    <input type="hidden" name="price" value="@product.Price" />
                                    <input type="hidden" name="name" value="@product.Name" />
                                    <input type="hidden" name="sessionId" id="sessionId-@product.Id" />
                                    <button type="submit" class="btn btn-outline-primary w-100">Add to Cart</button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@* <script> *@
@*     // Ensure sessionId exists in localStorage *@
@*     let sessionId = localStorage.getItem("cartSessionId"); *@
@*     if (!sessionId) { *@
@*         sessionId = crypto.randomUUID(); *@
@*         localStorage.setItem("cartSessionId", sessionId); *@
@*     } *@
@* *@
@*     // Set sessionId for each product form *@
@*     document.addEventListener("DOMContentLoaded", function () { *@
@*         document.querySelectorAll('input[id^="sessionId-"]').forEach(input => { *@
@*             input.value = sessionId; *@
@*         }); *@
@*         console.log("Session ID set:", sessionId); *@
@*     }); *@
@*     document.cookie = "cartSessionId=" + sessionId + "; path=/; Secure; SameSite=Lax"; *@
@* </script> *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/uuid/8.3.2/uuidv4.min.js"  crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    // Ensure sessionId exists in localStorage
    let sessionId = localStorage.getItem("cartSessionId");
    if (!sessionId) {
        // Generate a new UUID using uuidv4 from the included library
        sessionId = uuidv4();
        localStorage.setItem("cartSessionId", sessionId);
    }

    // Set sessionId for each product form when the DOM is loaded
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll('input[id^="sessionId-"]').forEach(input => {
            input.value = sessionId;
        });
        console.log("Session ID set:", sessionId);
    });

    // Set the session ID as a cookie for server-side usage
    document.cookie = "cartSessionId=" + sessionId + "; path=/; SameSite=Lax";
</script>
